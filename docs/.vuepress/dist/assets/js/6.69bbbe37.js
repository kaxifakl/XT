(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{273:function(t,s,a){t.exports=a.p+"assets/img/1.dd521490.png"},274:function(t,s,a){t.exports=a.p+"assets/img/2.d5d008a9.png"},286:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"全局注入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局注入"}},[t._v("#")]),t._v(" 全局注入")]),t._v(" "),n("p",[n("strong",[t._v("XT通过Ts的declare、interface、namespace等特性来实现全局提示与注入")])]),t._v(" "),n("h2",{attrs:{id:"xt-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xt-js"}},[t._v("#")]),t._v(" xt.js")]),t._v(" "),n("p",[t._v("xt全局文件，通过勾选为插件，来使Cocos最先加载这个脚本，当其他ts文件加载时window.xt存在\n"),n("img",{attrs:{src:a(273),alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"xt-ts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xt-ts"}},[t._v("#")]),t._v(" xt.ts")]),t._v(" "),n("p",[t._v("xt提示文件，用于xt代码提示")]),t._v(" "),n("h2",{attrs:{id:"全局注入语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局注入语法"}},[t._v("#")]),t._v(" 全局注入语法")]),t._v(" "),n("p",[t._v("通过接口，我们可以在任何脚本中补充该接口的属性，这边xt的类型是IXT接口,所以其他任何IXT接口中的属性，都可以在xt下点出来，xt.util也是同样的实现")]),t._v(" "),n("p",[t._v("这样我们就可以用这个方法组建xt空间下的各个模块")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("declare global "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("xt")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IXT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IXT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("util")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IUtil\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IUtil")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(274),alt:"img"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);